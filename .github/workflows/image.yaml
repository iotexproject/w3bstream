name: build images

on:
  push:
    tags: [ "v*.*.*" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build_prover_image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [apinode, bootnode, prover, sequencer]
        include:
          - name: apinode
            image_name: iotexproject/w3bstream-apinode
            dockerfile: apinode.Dockerfile
          - name: bootnode
            image_name: iotexproject/w3bstream-bootnode
            dockerfile: bootnode.Dockerfile
          - name: prover
            image_name: iotexproject/w3bstream-prover
            dockerfile: prover.Dockerfile
          - name: sequencer
            image_name: iotexproject/w3bstream-sequencer
            dockerfile: sequencer.Dockerfile

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ matrix.image_name }}

      - name: Build and push Docker image ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          file: ./${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},name-canonical=true
