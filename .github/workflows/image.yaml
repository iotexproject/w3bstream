name: build_image

on:
  push:
    branches: ["release"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  SEQUENCER_IMAGE_NAME: machinefi/enode
  NODE_IMAGE_NAME: machinefi/znode

jobs:
  build_docker_image:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Docker and Colima
        if: startsWith(matrix.os, 'macos-latest') == true
        run: |
          brew install docker colima
          colima start

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta-sequencer
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.SEQUENCER_IMAGE_NAME }}


      - name: Build and push Docker image enode
        id: build-and-push-sequencer
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./enode.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-sequencer.outputs.tags }}
          labels: ${{ steps.meta-sequencer.outputs.labels }}


      - name: Extract Docker metadata
        id: meta-node
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.NODE_IMAGE_NAME }}

      - name: Build and push Docker image znode
        id: build-and-push-node
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./znode.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-node.outputs.tags }}
          labels: ${{ steps.meta-node.outputs.labels }}

      - name: Extract Docker metadata
        id: meta-http-plugin
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.PLUGIN_IMAGE_NAME }}

      - name: Build and push Docker image http plugin
        id: build-and-push-http-plugin
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./http_plugin.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-http-plugin.outputs.tags }}
          labels: ${{ steps.meta-http-plugin.outputs.labels }}
